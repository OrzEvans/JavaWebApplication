<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
<!-- 以下使用映射Mapper接口的方式操作DAO时的配置 使用@Repository注解即可-->
    <bean id="msc" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.web.application.project.dao"></property>
    </bean>
<!-- 事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="ds" />
    </bean>
<!-- 开启事物扫描-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
<!-- 配置SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 依赖数据源 -->
        <property name="dataSource" ref="ds" />
        <!-- 指定要扫描的所有映射配置文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
<!-- 采用Druid读取本地连接池信息，进行连接 -->
    <bean id="ds" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <!--<property name="driverClassName" value="${jdbc.driver}"></property>-->
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${jdbc.initialSize}" />
        <property name="minIdle" value="${jdbc.minIdle}" />
        <property name="maxActive" value="${jdbc.maxActive}" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${jdbc.maxWait}" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMills}" />
        <!-- 配置测试连接-->
        <property name="validationQuery" value="${jdbc.validationQuery}" />
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
        <property name="testOnReturn" value="${jdbc.testOnReturn}" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPolPreparedStatementPerConnectionSize}" />
        <!--代理Filter,用于日志和sql监控-->
        <property name="proxyFilters">
            <list>
                <ref bean="statfilter" />
                <ref bean="log-filter" />
            </list>
        </property>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${jdbc.filters}" />
        <!-- 超过时间限制回收-->
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}"></property>
        <property name="removeAbandonedTimeoutMillis" value="${jdbc.removeAbandonedTimeout}"></property>
        <property name="logAbandoned" value="${jdbc.logAbandoned}"></property>
    </bean>
<!--druid日志过滤器,用于sql打印输出-->
    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="statementExecutableSqlLogEnable" value="true" />
        <property name="resultSetLogEnabled" value="false" />
    </bean>
<!--druid监控过滤器-->
    <bean id="statfilter" class="com.alibaba.druid.filter.stat.StatFilter">
        <!-- 开启合并sql -->
        <property name="mergeSql" value="true" />
        <!-- 开启慢查询语句,1秒 -->
        <property name="slowSqlMillis" value="1000" />
        <property name="logSlowSql" value="true" />
    </bean>

</beans>